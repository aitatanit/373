%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.94a Copyright 2003 Radical Eye Software
%%Title: tmp.dvi
%%BoundingBox: 148 330 637 668
%%DocumentFonts: CMMI12 CMSY10 CMR17 CharterBT-Roman
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E tmp -o cold.eps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2006.01.11:1040
%%BeginProcSet: texc.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: aae443f0.enc 0 0
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmmi10 cmmi12 cmmi5 cmmi6 cmmi7 cmmi8 cmmi9 cmmib10
%
/TeXaae443f0Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/alpha /beta /gamma /delta /epsilon1 /zeta /eta /theta /iota /kappa
/lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon /phi /chi /psi
/omega /epsilon /theta1 /pi1 /rho1 /sigma1 /phi1 /arrowlefttophalf
/arrowleftbothalf /arrowrighttophalf /arrowrightbothalf /arrowhookleft
/arrowhookright /triangleright /triangleleft /zerooldstyle /oneoldstyle
/twooldstyle /threeoldstyle /fouroldstyle /fiveoldstyle /sixoldstyle
/sevenoldstyle /eightoldstyle /nineoldstyle /period /comma /less /slash
/greater /star /partialdiff /A /B /C /D /E /F /G /H /I /J /K /L /M /N
/O /P /Q /R /S /T /U /V /W /X /Y /Z /flat /natural /sharp /slurbelow
/slurabove /lscript /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p
/q /r /s /t /u /v /w /x /y /z /dotlessi /dotlessj /weierstrass /vector
/tie /psi /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi
/.notdef /.notdef /Omega /alpha /beta /gamma /delta /epsilon1 /zeta /eta
/theta /iota /kappa /lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon
/phi /chi /psi /tie /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: bbad153f.enc 0 0
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmsy10 cmsy5 cmsy6 cmsy7 cmsy8 cmsy9
%
/TeXbbad153fEncoding [
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /circlemultiply
/circledivide /circledot /circlecopyrt /openbullet /bullet
/equivasymptotic /equivalence /reflexsubset /reflexsuperset /lessequal
/greaterequal /precedesequal /followsequal /similar /approxequal
/propersubset /propersuperset /lessmuch /greatermuch /precedes /follows
/arrowleft /arrowright /arrowup /arrowdown /arrowboth /arrownortheast
/arrowsoutheast /similarequal /arrowdblleft /arrowdblright /arrowdblup
/arrowdbldown /arrowdblboth /arrownorthwest /arrowsouthwest /proportional
/prime /infinity /element /owner /triangle /triangleinv /negationslash
/mapsto /universal /existential /logicalnot /emptyset /Rfractur /Ifractur
/latticetop /perpendicular /aleph /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /union /intersection
/unionmulti /logicaland /logicalor /turnstileleft /turnstileright
/floorleft /floorright /ceilingleft /ceilingright /braceleft /braceright
/angbracketleft /angbracketright /bar /bardbl /arrowbothv /arrowdblbothv
/backslash /wreathproduct /radical /coproduct /nabla /integral
/unionsq /intersectionsq /subsetsqequal /supersetsqequal /section
/dagger /daggerdbl /paragraph /club /diamond /heart /spade /arrowleft
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /.notdef /.notdef
/circlemultiply /circledivide /circledot /circlecopyrt /openbullet
/bullet /equivasymptotic /equivalence /reflexsubset /reflexsuperset
/lessequal /greaterequal /precedesequal /followsequal /similar
/approxequal /propersubset /propersuperset /lessmuch /greatermuch
/precedes /follows /arrowleft /spade /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: f7b6d320.enc 0 0
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmb10 cmbx10 cmbx12 cmbx5 cmbx6 cmbx7 cmbx8 cmbx9 cmbxsl10
%     cmdunh10 cmr10 cmr12 cmr17cmr6 cmr7 cmr8 cmr9 cmsl10 cmsl12 cmsl8
%     cmsl9 cmss10cmss12 cmss17 cmss8 cmss9 cmssbx10 cmssdc10 cmssi10
%     cmssi12 cmssi17 cmssi8cmssi9 cmssq8 cmssqi8 cmvtt10
%
/TeXf7b6d320Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute /caron /breve
/macron /ring /cedilla /germandbls /ae /oe /oslash /AE /OE /Oslash
/suppress /exclam /quotedblright /numbersign /dollar /percent /ampersand
/quoteright /parenleft /parenright /asterisk /plus /comma /hyphen
/period /slash /zero /one /two /three /four /five /six /seven /eight
/nine /colon /semicolon /exclamdown /equal /questiondown /question /at
/A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X
/Y /Z /bracketleft /quotedblleft /bracketright /circumflex /dotaccent
/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u
/v /w /x /y /z /endash /emdash /hungarumlaut /tilde /dieresis /suppress
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /space
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /.notdef
/.notdef /Omega /ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /suppress /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File  8r.enc as of 2002-03-12 for PSNFSS 9
%
% This is the encoding vector for Type1 and TrueType fonts to be used
% with TeX.  This file is part of the PSNFSS bundle, version 9
% 
% Authors: S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry, W. Schmidt
%
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida + Euro.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (6) /Euro is assigned to 128, as in Windows ANSI
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /Euro /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CharterBT-Roman
%!PS-AdobeFont-1.0
%%CreationDate: Fri Nov 2 19:00:13 1990
% Bitstream Type 1 Font Program
% Copyright 1990 as an unpublished work by Bitstream Inc., Cambridge, MA.
% All rights reserved.
% Confidential and proprietary to Bitstream Inc.
% U.S. GOVERNMENT RESTRICTED RIGHTS
% This software typeface product is provided with RESTRICTED RIGHTS. Use,
% duplication or disclosure by the Government is subject to restrictions
% as set forth in the license agreement and in FAR 52.227-19 (c) (2) (May, 1987),
% when applicable, or the applicable provisions of the DOD FAR supplement
% 252.227-7013 subdivision (a) (15) (April, 1988) or subdivision (a) (17)
% (April, 1988). Contractor/manufacturer is Bitstream Inc.,
% 215 First Street, Cambridge, MA 02142.
% Bitstream is a registered trademark of Bitstream Inc.
11 dict begin
/FontInfo 9 dict dup begin
/version (2.0-1.0) readonly def
/Notice (Copyright 1990 as an unpublished work by Bitstream Inc. All rights reserved. Confidential.) readonly def
/FullName (Bitstream Charter) readonly def
/FamilyName (Bitstream Charter) readonly def
/Weight (Normal) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -109 def
/UnderlineThickness 61 def
end readonly def
/FontName /CharterBT-Roman def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding StandardEncoding def
/FontBBox {-161 -236 1193 963} readonly def
/UniqueID 15530648 def
currentdict end
currentfile eexec
D9D66F632A4812FBAE89F8A58F28761E72B1FFC5625083034B3E1ADCDDE02FA4
B44AE8F3A7B85787C8C90047C8CC19AF3F685AB532A42DE6DDE2B6C900F290EA
0E843501E6741A47C20B736B9394214370E11946173895F8DE508780F72F0EBA
B617E6A7468FB2D84028D377CDC3C4E337E3066313976E514621C47725A95FE2
55D6B29C4B5E91721651BF1D56CDCD84D4FA9F072BE27E14FBB961CCD91008A1
CDEFB20D6B8674ACB2DC8A1C918BC55D8CBCA5C32F80A63C54119B24DAB62F09
9A91E000DC8726FCD5AB1CEC8160DC0ADB17E317C54D62AB0ED986197F6B0529
45CF2090B780A57004AF4BD3FA2F5CCCEDB90A3CC06EB295C5E09E3A63BBD650
8D1CBF80F7CF38C95540896C7A3D301BF53DADCEDF4544FDCD52CB35FFDFF986
CCF2284A09F69C67006AC7FAAFC626BB2B4F177B7927638476BDE81C92082A30
5782B405335048291A27F9E7564A1A32ED4820E20EEBD649CF9445FB4AFE77AF
FFF1E30AFCAA76CBE1E9E1D347ECD26157FACC5814014AF522D2DD6A0EAC8A99
489464E48740185286F9FECAE74869679FD2432A04E2A13652D99845DE08AAC0
88E24B10664925F9349B4F2B110FD6C35C0A12D90F4E9EEF53D5F4F56149995C
4EB35DAE4FF2839382D05A26DC703935C4EC80D0500C60752113D0701777B14A
AA05AF6428926F8A8E990317A0B8FB0CEAF8F5AF8AE7CBA11EBDC6F7C13FED0B
558A27CBCDE4FB7AB119532DD43C9C2C9C5CFE8F648A67E9E289A69C9DFDDD6C
1FACC26DAB3697A170AE59F5D4EA3141667901E70307B00C067B81CE96FB3A4D
C9021D8814424EE6A26D04BF42D16363ADD70D9B119FEE817042865FBE7094F8
4CD918C631D78A2B0FF5C2D014582C29A11E838017E95F881BA04345C99FA410
82AF78A21844CB2A7D8C90AFE67D6BFCBB29C8C3E74BFFD20D8832B7CD17670A
2BB62DAB62C2DC6D3C1C9CE9F2C21F4AA40A04CC4432091D8193C048A3E85CC2
20227D765EA8AC8A26B002BD68B8CC49B16C251E5AB677F19C91DA4C250E4378
EE8D80059115F42B22DD152AD1E8C61AE4E5C8E724EF5FA8B4A967A72CA5CB97
07F2D54A6519488060DD8CBC0A8786256D504E5794892754D275C2FE08E21E18
F07AACD4AD77F203AC2C71F002337E8D937DC27EB13C2C42FA2FB80BB01B77E0
080C2F6E3919D1D8303C39AC1A889D7B291491112B2086AEE257D3459BF3445F
830507440A8AAF20088C9CA414A42121BF23EBEBC6B2A30AD1E1550745EA0567
8EBFCD3AE3810C3DA334C7BAB0C5CA2BFDBDE8B848D8A9674B47F1E55E05D6B4
94A11BF22CCBCFF847519FFD7059E8349CB9F960C50E88998F9E08DF9AE0AFD0
80DA0CD80D8DF7EBC8BDD5D0619E4003C2BF3B56291376B04486A40B27EF5A0F
A16510FB9F6D14FCB853AE8519FAA2871726E88B903BC5C04FD20BA3C989247B
02E5DB75B16831234139BEC589C97F584794960D0AC3FCCDE4F6CAC123513339
AD7F5B19D9EE43A2942C3253AE24F8990924F52E0882EF078FDB642F09E20933
D1022D57372BF60DD9AFC20021A2EC38D588DE5EEF09452F69FFE4E931E8A25E
B1ECB776469FB368CBD89C8E125C09CFB890B79DC12322574C85B1EF68F2EAA7
AF1A8784A56FB7874912CFD88E5E7E8791024AA39E6188FA8F5B9A516ACA5FB0
217CCF68026A4E79545C72C5A097CC670D60B0D8D5A22B80CB7737DE2537E7B5
4F7E7B66219BC1A282D959687B9F6712B28EA1593D14577705EFEFF28C43761E
FC4425E36CF8B8E578099D8DEC8FC416BB46A30AA6E838D5A0C2E786EE6B42B3
1B44474FC192B6DA9387DD8C40DCB82C07EE61A3BA3E78F64ECDDADF68977DFA
75643B70E3CB6EF09C071F23B7C33CFE4CBE15F1D299A11567DB72442CE7B46D
C85A4EE0F8DF8C20C8A2FC62EADAB241292B55A210FCB74F1B7D0C32E7E5077D
6461DB85F02048C2A6C17253F42CB1D329C7450A21E4F97C8FF5288DAA2A4340
584FC73AE4C2C9EF29D69BD30BA59A879F6DB6228C0105AE5F8C3D4E9D6EAA55
FAE0DC26AA1A33987BE2F534DCB64244095927C572FA90C64CAB81F977C214AF
3A09C1C382056E9B89886F5750B173C7EA7ED2705E70F62B5A1094E59C236EED
B62E426BB405B4722D3D0B5F91D2E7587E9F1005F29EA00155D2CEE1B9C0CB22
5B3A2FBDCD97679B965126E46BB5B788713FB8009CCFC6C0467BF07C0F4AC5E8
C7D1E09E418B68C5DAA181E59ED9410F4D901B9CD2267DA820DF42FB1415EB6F
3C3E3D2AACF07BAA50C078B8B4264912189A99FFCB4869373BBBA6191CD83FC8
40F28EA5744BE46A492EF0633D73C071CEA588104BBAA090AA366319915D7540
64DA9182274D4F155166BA36E2A6FA8745C2A199C2375B8C57D0DE9997F0976A
CCE231CCB3D1D335D2BE126B6AD9BDA8A44FB45DEC72D2BFFC5959315B364BDD
D7DC51F0B8CFD1429C72E269A2B8FBA0F24BBE1CBDB2C14F0F36BB0756B9E978
BAD99F07A9A623AAC35969666506F5E9ECC2BBE7CAA23CA453DAE2ECAE276B63
BA64B2BE1B1041C5C68C45B71A715B6C2DF77938A17401BD28A77359BA3562E2
2ABB25924706B0BC0F896A006450A433ABAD645383B04267760429734028ABD1
1821BCE41F9876A9678ABC592BFB07CD1BD09204CE9BEC01282C2A851DD999E0
10E0F6EF49E71BEB518CF9E2DD405DA68791DA15FF5999A8A0A26A3C8BEFDA61
CF965CC700FF22D1C9E5F430B38568BE6E4E0116CD787FB08B0D319360D66C4A
670BF6A6C40B6F59FD5A71283D5A7129A6B4E9720CF89D0C92DE633F84CCB5E4
C8DFEC0195E99B6E67063E68196156AF112B0DF13D1FFF71113ADBE364E50E09
1803CE257A282C69CEE96C76415BDC00064BB66A9724039CB8A4F62D7111962D
9DA0CAB19DFB898AD2CEA080503F95176C27BF553D9F6B89C3DD83352DBC79D9
6D35E0E6110EF85A06A160807FE1E22235711347D16C9B2716617538D36A3F4B
AE8BD94DC0BFDA6BA58119DC4B88BC114EECCD9067DED60521FBF9165F5E7D09
D9A6DEB8F502FFB286BF83ECA32DA194526761D4480F58EDB8556D0670B1F158
9DE405A8F821C2EEA511E4E69DA4736667C4B99029A1EAD35032A921B3DF00FE
2EE816E4A1EBB873B09529BD74E23AC1993D1428B20084673722B46FB281D67E
3B28B421338F95BAE2293D59F6D69D568AEDB1D2A12BAF043E7DE17058A7998F
A34AAD8C78DA16CB68CD1BF057E2B36426C7DD98EAB24D33CD28B2A6342E7FD2
3E1BFE1487F82CC7CBFEE6A5057478F5A2068952F0A57A5A3ED88AAA6415ECA3
8589CFB7A556C901948FCA67AA780CDC4859BF1D69E51166A99AD3586BDDE872
060175B779F3E43C806A96EBFAA580166D4F3494E27C170FAB5CCB46CEC2333C
B532E532B964FFFDEEB586E1EC2FFFE690A0DD7156F5098FEAE629DED7BC7DF8
938C2ABB6C76C00B7EC5F5647D0BE8775E1838238A38E9CC93B9AE116342C273
BD4FA649A767A3D0AFD1C4F4609576ED3FA9ED0E119E5ACD18F96868A8BCE97E
D6DB848A59787271076A18913BBEFA794F8E431B65E01EFA9E51AD12187CF091
D7894A60D83B72BB224F6A82A2245FF7481AA6A33920FAD9A7F7A6CC374ECA4D
159BF1ABC7DD29EAEFF1CA96F54B20882184FAC1670551CB5E0D690BF156CFEE
F440B1F12C05792E9E878FB8309F8C6611D567EECE1E42FEFEDD80E6694B5375
16CC52AF0857314BDC5623F03E816BC403F8EE4E2683CE083F8B6D7F60609F18
1D8508D6BDF2660FFED6262F306F86C47B0928B98C76CB918ABE5710062CF9D4
91D26EDD1689933B0BF8CEF542D6752C814F797EF3CC46AAC94892266D1BDA9C
9F8221F1498E1E9B8ED51EAA99F4C21BD2DB628C64E2F0A6FAD400217A2C2DA0
284D144A77D0DB726638BA213C8A28256E6831368E653E5305CB9D8098FFDE65
4522B62AEBFB73E018993B13647F417253D8F90EA0F131A79F266F540642EBA7
AFC8BB06FD6EF7C868AD003214F23CBE533ECE9AF092300EBD1E19B5C738F9B1
4CE24268FAB04B44F9C50E25F298C53819DBDC24DBD55A0BC8ACE6E7972CDD93
188226D0E6AACC1E6403105345683B841750054D77902DCEE55E4AFE699A8B18
F4AF0B84445FD9C7BA54570D1EBE20C9AF3FAC15C9B362B32A001779973DEA91
BE995F51031C8BF16CF081E81B78C1DD1C01D45956870AB65A97D26EEFF4AF1A
8ABDC67AD07228480A688FDA511BCF60A4F86D26258A210A15C3EABF35CD8588
B7527342E892EAAF655E13158237553400867E2028EE56949E915B81E5663792
6742D0DC2B61592F08A69416DA4513008F296B41CBDAC3A4FBE58E6A47996379
4952A239410BD6F6CD3E4A4EADBEA340F4B45490CE22EF906079FD21D45DA762
802188A29B4E3F022433C3F7A7E607ADAFE8D8460FC48FB39CA12C042870FC40
032DACC8BEDC8E984DBD7CBBBD27C7EA54BDFAFB92C64EC80EA4DBB9B4FBB763
33DBF216BCED986A2713B075FECE0C07E55FE09506EBAF10737929A88CD7403C
D67AEE8C1F2723231065ACAD7D02D559CB82CE0E04014CF260EB7F15F4FC3095
F4D47FC21678FCB8C7BF269241C0DA67E5BEC040A978C114D89BAA31A0ED8B5F
341294ECE75FFDD18EC033F6D1A5B6E1D8A2A3EA417530BBDEB28F2E9C58E610
2FBEDA5E099229C6CFDDF442967FF33F8024810D955EF5C9B37C25CB89E79700
36965D2B9D1FB5ADB54CC6516EE2C482D5B65336C274C5EFA1E4C8B419499D3F
6B356E3548E04426E7189989EC8DB030AACD0B107CB613400A028CE9B5899192
D8B8485121D710F3F1DDF2EB1533F72B719E2E97641520EAA38D39681818354F
6498D4FC01BDDB016376103E8C33C57BF8973897356FD8DA9D188A85E9B3EA7B
84847B44FD7F635A1BC7E7BDD1D4A10458072956220128639ABA21FCC55F5ADC
552AE8B0CF1C08CF0F5F45E0250F1BE972C64DA2AB2384673BF0664253B09D5C
28109E2F821C28ECD4340FEC1FED38E4DBB4F933B5CA83CD7828EEA27524417C
FAF66CF529D8F9233B2279D2211BC39DE3C3AEA64BAA8264FB22842FE649C9CA
CA5E2D35E33B794FD84C276A856A2DBFAD4ECBA9BAFB66522876168F012F77B1
6B4C3933695839961674EE26F428119FF921AB40AA7E7C3C1703746F461591F9
4EF054A7FEFBAC66BB5B739F2B1A9022A8805EF54827DD39AA60F35ADA5A08A8
F7E99982084F1533965262892655C18C53C5FE494B2E9C167AD45B5D0754B270
FA7C180D3CE75931849F5450501EEF40228249C86DCE69FBF7377954754A34A9
A04FE68A437BA34C1019479430270E432F17B58368D34E5303D9A7803DB66840
E2FF729F96AAF0CFA052F4E3B827E7EF3A2E1D6D19E6EF9A8EB3FCABB135F366
A111EA4B21DEDD8DE8F337522D514AE04DB39FCA9C2AB7D8BB381CBB21E35C76
E27034E5CB801C0B131B208B63AF2A83677CFEBCE03A8E365AC6E14956512A80
7D53D4C5E030925BF467F53E41FBEE2380D960765CC29F3A81304A929EE66792
8C43BF2F0C2D75CA624C540143A93EE440AD490C5F12862DF943B04BEEE5FF33
AB4AD8A1856AF053802BE679DB1C3415DE40C492F1036351910FC6731B9F7CD3
2F5141334BB04306176F7ABDCEB4ADB90CE9D7EB115C54AA6A1B199648C26F4B
EDAA6133EEB34A840EFA07E5C21A1DB469994A576F569F2FA8FCCE10A4E1CEB0
5F54B903FEBEA86F0B35065992D3E426DDFDA515BA2A3BF319853348BC458ECB
2A8A6049F9ABF44F4BF842DF541170789F19005B2050A4F2F230566BB0CD2579
47802477B0EAC04469D32C787EEC54B4DA2B257CAAD504E125727A7A2AE4E28D
27F5E6DDE87DEACF756B352E24F6F14B5478AEF4D9BBA2776B87C1720E9ED02B
59CE71234852938403FAA5AD122CB489FED6BC77D803E156F7DC9D5D495FEEE1
364AED52D29A7B5FC5F1741A5546D8C164DB247F6041B3A7302565C56B90093E
A200C72FDEE87E53945816B7A1E4B6562324D64EC6E85D222866914F27FEB1D9
F83AA11E75FA45E7C0806AC25DD3071BE338AFE6B5823430BB0BA4847DEE0F65
1FBDDFCFB5134DD46C874040B8B4DFE035CC406DC8A16E015566A235B0769DBB
CF13B55AA56C22EB77ED2C2543CF8BA3E180F135723982E17C120C7060FDFA34
37451E37500EBDC70E98F9BA232E7A929C923B62B2EBFF463EF04D9F42ABDFD5
CFB37935B2BD13BBC020A40DB32C0948D9853858061270D3738B7445D3BE616D
B38AFAF056ED1C8FA8F0B0628D8DB1958B6CBB3DA5217D77463630984C825370
E226BF7C6E5165F2A2B020B5C95908A75EE3211E2C700B182BDFB671ADA4708B
1261967D2F32267ED6E3CB6DC9707B946B8CCE71861109ABD3673AC8441CB034
E83F6A5E46C559C37E148D636004CE06E3C420129C2276356A3D88EA4166DD29
B0B5700BCC1BC3FE8C9B67C4474246275C71CD035AFD2D8B016E9DFBAA37B5B8
F6533BA41AFA6537FECF86C9A9E7525544D25E96C226EA0F84CD31FA42BFF08F
3C3AE3E851B6C2AE87A60DE52EF82B42FF83C60DBF47955AE94FB67F6A27B363
D66BBA4370135F6C7157DAD77A5F272095CF5FEE10BA9658AFDC415E0591885F
E64DF96A4FDF4458A8BE538DB6D5381E9F1625F95448788040222685C1DE9EB4
D6F12C7F416A884AC053294794D55A84F474866D6A00E556A84A1606F40549DA
E2CEE35B301B00E912B4187407E27F7AFAC79C4C7319C1C80619C41BA69BEDAF
C4EC32E717BBDE2A6AB2C41B581368075E09B54C1579B94AC538CE1BDAB68690
BA9839BBE6F87DFE602B692FB2D609675FA3DE82C3B323FDB3C34455D29C34FC
F95BCD1CEFFEC73EBB4901658E912FB0E7DE40D082C05B6CD4613A602A61D5F8
567889B8EB9EB0A59100618CD41AC91B0FDD876282D03805F4C6ACE174DA0178
A5ABBEA54917394017AF855E318BA29BF2A3F4BCDFFDDE27CF4CDE8F1766079C
29FEF2587F9151023487405629D3905DDBC06040FB9E60A33FBA38C177F050AF
C1AEBFC9F2C2579B3A9D749B5455FD13F636056181EE8AB61F61275965C92B35
33D47A5BA7659C17A6A3392093D12BBACF99577C576262BBC917AA0560BF4D2C
D5B764160C968B20D61EBD3D09DBFA00138423FA5323CE9B99EFE1AEF0A431E3
3E7AC1183F9E89C11F2BDB066D0FC11822FF14D39CE75AC8C9DBA7007A73050A
A0371B28E42B8E27D0EF0E125E44E3FA667C6C9D9C4DB9DF4BC141BAAEDFFE91
130665AEC3DE0189B44CBB84F930570579CCD4156B9033584AE587AE34E714E6
781BB06424A62D3CD3CA1B837DC8A938111572B396C6C0750D1B13A74E601053
0B8DCF342F7D3C14D05B81C1C53F6EC5CE79222B727FC6EEFE4EBD9AA28DDA7C
A1485D1F0C9D01A28D296A5B633E03D5DB0E1D455A82AF3BC5353E0A1D633B66
BB47D5DEFA2E695179EA63692048016652DED6C0FB7698DDCF27C803EF858F9C
18E6F4AFD550AE8C6266651085B121E565795672AF4087F76B478B6133921DC3
54C723E3333EF9922D78E32ECAEF8C02B60D118EACC8F2C5B90F79AEAB2C32CF
1A702238A60EEED8568CB05D1147A46D9E478F36EBC61A2896881C8DF8F105BE
D308622E420132EFC6E89648729DC2B8EDB6FAD3E1E004084E1A68E4302845FC
D1DD9AC87446EE399701B9668F0B233C9542AF03ECDDBC52DB717F6A632102E5
70C99B3AE080F7C201EF5EA83DABE8BCC5672D2F329D707B3305AA8E60CB884F
432B568A934C9FB3228E2384C8CCE46537C07E7DEB49ACC3275E69DCDE9B7C4A
B83EAD93593D3E4F08D114531F4AD1A6B9D0F14E745EF1922260A821477BAF2F
C950B9159F279568AD063CFB77B4C9888D8CFD3023E90DE072FA5D5EBE769D7B
1EE6F1E6C0F8D716216E647E77239FB80D5760857E201219AB8173FF5BA49BA5
60880E0D26C47CFE2837542F782882A941AEDFEBCED47460477B5F89D975EDBF
3E33AF70C0A5A0D324A4EBD7CBABCBF1CBBC06317BE24002366D3D029559898C
C741D308F4146DB55506DE64F5F9635B364CE74FEBB1497A4BE94D774E3E094C
D5BBFA3CEDEA0BFA3EFB96EE240C45FA7E3C58EB0EEB1D596D4AEC3DFF69CCFC
9B3EE7ECF0CBA68A5A5658BA48A0C744B14B66C58C88504F0396C4167841DCBE
CC54725A92DEB146D2D95634FB4D417787BC5586B7A5039938FC4F5269313B4D
ACDD0C69CF3436F58FF10B6946B8167C6C04CBCB5B735DECEBEC528B11766B5B
53010B4FA82148D9CEFF9FAEDF9F224B71C44E7C07F351F67442A1F0FAFE6C5B
09D172F477294C0FA0D723B87690CD3C5DB239DED8E08C85973C9D88E006CE5F
A2260AA4EF15AF7AD898D1F6616D374342BA05ECB51C18D5AED671831F01E9AE
186589B0ED988D74C29AC692386EEEDBD6EAFDA290B2C4B950E0D03584B9B121
0E2AE1E00B95CB39DF8BF1AF05810C7DD50B684D6755BDAC125C6CEB9162EF39
342628494B9E6E7C7AA0B1C22FEB82DB55287AEA888A5517BE1657D773F9804B
D0F18818BA0A73C8CBECD81DEEF44158FF73ABDB05A03F18E84C69BF47F868AE
7F2392975EFF0343AC56CD0545201F3CCC8B054ED2E9D12A7A6B3095370144
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-33 -250 945 749}readonly def
/UniqueID 5000795 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F781214D8FA9C0C3F7
80001321D4397771F728FD9EE57CFE7D9192B887EC883EB1505068261DC40089
7B7D2820F06515CD74513521F6397FEAB3AD3572D9A8269430E407E357422461
1785FC2782047F4C0339D79B16862D939F3A37F78E4E2174E4FBF132539CB760
207999FF86F6A3EBE48EB0A1CA635450FDEEF79EB16D853F3BF4B1E19B8E0A97
D807C39015A4B34D3F75095EC64C463389DE0D5ED8C8CB248FF8FB4971F3D4D4
CB164070032B0B47D0C65A657377D9B0A17167B4E56A771EF488C4CB58A31BAE
9553E811CBBB48A2D9C5EEBE02F7DFB052C59F9E925CB49DF68AA5ACB464029E
DCE938AC3CC92F1875CAE4FE01BDA98BDDBD43439EE008778EBD504EC853B680
FB323E96CD9EEF69AD4686F5EE36BADB93F0C9C08F764C9C7DECBF6F7776E17A
FA6280B82B1AF7C228963FC5F52812BD22BAC72061840117BE8C8CCE00A4B882
B2955F309278C10B5C45B1BD876EDD53FB950DB289D54402F06BCC68F8C53E80
1A395447992FCD3F80DAFD7DBAF92C4EC7031B8028DCE396A62E78AD36A1807D
E46B8C4DD1709D77E9D2EE182179AC75B4BDA8F8C24F0528DE69659DD076BCFE
78F1BC568943DE750A7ECDC86E84A2B05CD59F5C0D71ECAD3F878FB321C79778
5585E5395049BDB23B49343CE1968DA2E85FF623BEF1C68416B7F26D8D49FF86
C86A544EE47042BB57F278CF8C7D98D60E87D59B55447B92CE4721BDD17291AA
20771F3C978AF768508F66AB7D8607DB06265991021987AA97CC0572BF84B184
F4120BB10DE49FDDB6B0AEF6E15E2063DD3D43400E538F730FC9FB2BC36DFF56
A86B8BCA3476675E444260A9A5A00B0058CBDA506E2BD2046BAE6283FBBA59BD
C6CECD1A5C6426655C48C7D1CEF503E7804EAB8ED5D38E23D753FEAE5B40FB8C
F8FE2444
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC570317AAEA74A842CFD26F9591866F5A0
9B4EAD7395F5196B36997F1D59E88165C94739E74C2B40820F8C972B175ED79D
87C9E323C3CDD5C2BEE6409017767534E19F45AFCE2C6687733451AD2E75D112
42040BADFF90F5FCF0677E04D0E99358A8268147FB0BC093C9E6B3A686D273FF
8CAB1B38C943D6756EFF83760A0822AB4C2B5BE81D64C1AC67B3E8E667D6F1FF
8533A43741F7EEBA4F86D9C805D5B0D59E7CBC1E6BCD384DE24DB7D67EFEE2F6
00A1A7A4A134EA64D9D1484459CBD70C13FC27BD779BB5B95E9C0307F9DDFFDB
5EAFB43AC294ACE9A79052EECBD736AA4204181EE872B5F2326F677FAE112E19
87A37D1C2003C131DC78DCE2DCABE0A5C3281004E55DC4157E5F7ABBAF9066B4
9D523DF807E53398B7BB2C2A4CD9D97474BEB7D19CD23D4A87CFB9663EC0C7AC
3BC268FDD8692D3B44FE2F95880E20EC00DE131F06F1E0E5E3B06AF30EEC33B5
7B0AEB91EBA7735046EA8985D175D90C75EADF98646D12AF3FAA2B8533CCFBD4
02DF66D0B91882BAEDBC6CECC1A88072B5FBB90E6A31759D0A86998E23AF34C1
1D611B78DFADBC18A1BB321057F680CA80A4B9CFE83B1401B1D9778A6046B0D6
60677E5F0E5FC8272473A937EA556A0009BC92A08A5F3D79CAC8CE84EEBFBDA6
9875963E30388BB12CCCCE2194D33579DCB27E84F33E6D5B995153CCB5B76660
277BCF8034388BDD81FC11EC8F58EF2CF2C0084FE61AFB88D7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.1: CMMI12 1.100
%%CreationDate: 1996 Jul 27 08:57:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-30 -250 1026 750}readonly def
/UniqueID 5087386 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DCC57F7903449E07914FBE9E67
3C15C2153C061EB541F66C11E7EE77D5D77C0B11E1AC55101DA976CCACAB6993
EED1406FBB7FF30EAC9E90B90B2AF4EC7C273CA32F11A5C1426FF641B4A2FB2F
4E68635C93DB835737567FAF8471CBC05078DCD4E40E25A2F4E5AF46C234CF59
2A1CE8F39E1BA1B2A594355637E474167EAD4D97D51AF0A899B44387E1FD933A
323AFDA6BA740534A510B4705C0A15647AFBF3E53A82BF320DD96753639BE49C
2F79A1988863EF977B800C9DB5B42039C23EB86953713F730E03EA22FF7BB2C1
D97D33FD77B1BDCC2A60B12CF7805CFC90C5B914C0F30A673DF9587F93E47CEA
5932DD1930560C4F0D97547BCD805D6D854455B13A4D7382A22F562D7C55041F
0FD294BDAA1834820F894265A667E5C97D95FF152531EF97258F56374502865D
A1E7C0C5FB7C6FB7D3C43FEB3431095A59FBF6F61CEC6D6DEE09F4EB0FD70D77
2A8B0A4984C6120293F6B947944BE23259F6EB64303D627353163B6505FC8A60
00681F7A3968B6CBB49E0420A691258F5E7B07B417157803FCBE9B9FB1F80FD8
CA0DA1186446DD565542BCCC7D339A1EB34C7F49246E8D72E987EB477C6DB757
99AF86CEBCD7605C487A00CD2CD093098182DC57B20D78ECE0BECF3A0BF88EBA
C866DB19F34BBBED6634AFC0F08D2AFB2A92578A6F8B4ADCD6594737FF6EED7D
5B536DA9E3E2CADB40DB7C600EA4D100D33C3B92B1CF857E012C4EB370BA8295
55B50047C85071DCC6C89D0334512E83AF43161F0CA7B35F0924C3BE19428DE0
B3F4E3885FA18D0282907F79FAF00FA41673928B8DA432FECC08C8F6A7563DCF
FBFBC8C14D3F2E8831D859741E37BE6731DEF7E011DBE6C7520A40A0410370F1
B3065705D7BBA705FAE6B1FE0D78F13DA9052D49784EA5DCB3EE173057BDC7B2
59DB6A21E4F5674046F3B5D77BD424918000CC2E274EDF6D12DFDFB5801C78B6
17FAB007F03C7C2563742263DA455E62C6503614A8B1D7B0CDC4E61C2B1D89BA
A2B5191DF9189D26DDF40F81199EB48E84CB802F8B01DEBA2511AAFF23407017
9100C98366768CD37AD56367D9613ED795762B61D49D0A82C4B83A41DFC3303F
43F8AC3CA8F66167F1A2C939DD8FD993698EB64B70769FEA3BDFFF1C1825A8F2
ACCB9AD87E23FDCBB3C03056E3F018B371BF017D4260465C96FE9DF15274FE3D
6DC7E8E653127E5E9E97D6217CF42451259817EB8EBB888295CF67C005F1C51C
DE256AE62E60DBEE0185AD87A858DF160803B484EF473ED56782A88245C7DFD9
1B94735F41C1B2A7697F51A2C655538E24F5B6A3F7BBFA9DAD29AB49242A2198
CDDEE9A2679086815CAF63F5FBC4975508C8A8176DF9748C436BC64F6B41C7B5
3F8AF3E4511681DF3F77E98360057E0DF8D00549CB41A88DA237E899E9A51964
2212963D1D90C438CF7F2E30E9ABC67907FC34608C9FCA99F1CFB13DE47E5F47
B2A5B973C35FF9015F999397645B87C4D3BA20120EDD74E85865CE6B128D53B6
DEC1E2D97EE81EE47DFC1E2A3220DFBAD2B6919C83994095412916C4C7047E01
17CCF40948A492EB73B198A7A2BCB4BC99AE4F03FF74C319FF75460AF88C00AF
DE97357F100F522FBB5CA428550B4AF614724CEA6E4CE464C2494C5D77F9EADC
B0EC57A32A701AAA76DF711AD48537E4794FA36AF54ABC78D41C022494A0B1A2
629B342A5976378115E039AC90F7C3D5EEF21D125A318C895EEF13B34C033B8E
FD933A17E23A936F7B61608092DFC2B4F05F8313551990ACD8A0EBF826F25CBA
12BE1AF0795D9995FCDECD71868690807C640E3F0F2AFBF7D9F879C8C165D415
934BEC027ED1D63B105C7CD0AC3EE25B3E30AD815556ADC45B34D8B8C5806878
8EC904E19667262E5CBDB6DCC16AC5CB193CC6CDFC2E9F83ECFC8339811A8DA1
126AD12C7C2480A92F3C7E2E5EC344932AEEEE39838EA3C9FA6A8865C16D1485
820D637AD66B28B31793CB48BFAB12B77ABF77967CD79B89557B97F958C08CDD
58BC88579045825A267F3FD897156E1315176BE195E71C10A35AF3826E04AE59
C2896ACDB288540FA376C7CB590EFD5690424A1158CA9B03AE17760064A42FA4
7912DE073F1B111058B3C39AD9B71F5AD3DC33C53FF745D870C2797FAE4B23C3
C546E765FACFDE634E262F1842C9CB8ED5BB80AD15724113FD2B0EB5E9A525E4
807F685B342972D0902BC871059DBB9CC5C1F0CBB18C6EF797DF6FC0BB4EEC05
1AA20F34EB139BEC3DC7866B125E70B171B456943747711868A98E3892B9B992
E37B8B3C270628F494A97A5C909294243FF46B94ADD234CDD8F493161041AB11
1CE17341F60C99F46F66ACA549FD060AFF078B9A3B1E95B6DD2704A4B7E037EE
E860DCE5660F1DB2D3C1102484856D0C602E0B79F6217CE6C1E211ED24D46B25
EC212F3E3046E2AC2C8CFB07D766442AB6DEBBEE780745085F1DAAEB170FA8E5
AEF83FE1FFF799DF1DF62B3B89917680569A645716750300AA1F55791832B55F
1124B55F3C91B00CD043DB4582FEBA153E85FCA1E73D524B4BF95F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (tmp.dvi)
@start /Fa 134[103 6[79 3[118 6[109 1[102 14[128 144
124 6[180 108 6[120 1[131 1[133 65[{ TeXBase1Encoding ReEncodeFont }13
207.555 /CharterBT-Roman rf /Fb 194[149 61[{
 TeXf7b6d320Encoding ReEncodeFont }1 206.559 /CMR17 rf
/Fc 205[66 66 49[{ TeXf7b6d320Encoding ReEncodeFont }2
143.462 /CMR17 rf /Fd 186[109 35[207 32[161{
 TeXbbad153fEncoding ReEncodeFont }3 206.559 /CMSY10
rf /Fe 135[115 18[94 13[191 118 16[150 69[{
 TeXaae443f0Encoding ReEncodeFont }5 206.559 /CMMI12
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop Black Black 639 3238 a @beginspecial
0 @llx 0 @lly 487 @urx 336 @ury 4870 @rwi @setspecial
%%BeginDocument: tmpfig.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: cold.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Jan 11 10:40:15 2006
%%For: rfitzp@wl-s244-244.resnet.ucla.edu (Richard Fitzpatrick)
%%BoundingBox: 0 0 487 336
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 336 moveto 0 0 lineto 487 0 lineto 487 336 lineto closepath clip newpath
-76.5 461.0 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<0040100080200100400200800401000802001004
	0020080040100080200000401000802001004002
	0080040100080200100400200800401000802000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 51
% Polyline
n 1800 2100 m 4800 2100 l 4800 7200 l 1800 7200 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 120.00 140.00] PATmp PATsp ef gr PATusp 
% Polyline
7.500 slw
 [60] 0 sd
n 8160 2100 m
 8160 7200 l gs col0 s gr  [] 0 sd
% Polyline
n 4800 2100 m
 4800 7200 l gs col0 s gr 
% Polyline
n 1875 2625 m
 9375 2625 l gs col0 s gr 
% Polyline
30.000 slw
n 4800 7200 m 4800 6000 l 4800 2625 l
 9330 7185 l gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
7167 4942 m 7213 4980 l 7331 4838 l 7213 4935 l 7285 4800 l cp
eoclip
n 8250 3675 m
 7200 4950 l gs col0 s gr gr

% arrowhead
n 7285 4800 m 7213 4935 l 7331 4838 l 7289 4842 l 7285 4800 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
n 1800 6000 m
 4800 6000 l gs col0 s gr 
% Polyline
7.500 slw
 [60] 0 sd
n 1800 6000 m
 9300 6000 l gs col0 s gr  [] 0 sd
% here ends figure;
$F2psEnd
rs
end
showpage

%%EndDocument
 @endspecial 0 0 0 TeXcolorrgb 4202 596 a Fe(x)57 b Fd(!)p
Black 0 0 0 TeXcolorrgb 2327 3184 a Fe(x)2442 3215 y
Fc(1)p Black 0 0 0 TeXcolorrgb 4014 3184 a Fe(x)4129
3215 y Fc(2)p Black 0 0 0 TeXcolorrgb 2927 1196 a Fe(V)91
b Fd(\000)45 b Fe(E)69 b Fb(=)57 b Fe(W)74 b Fd(\000)46
b Fe(e)34 b Fd(E)53 b Fe(x)p Black 0 0 0 TeXcolorrgb
2552 1871 a Fa(V)-16 b(ACUUM)p Black 0 0 0 TeXcolorrgb
-1782 w(MET)-23 b(AL)p Black 2177 1384 a
 gsave currentpoint currentpoint translate 90.0 neg rotate neg exch
neg exch translate
 2177 1384 a
0 0 0 TeXcolorrgb Fa(Energy)56 b Fd(!)p Black 2177 1384
a
 currentpoint grestore moveto
 2177 1384 a 0 0 0 TeXcolorrgb 639 2471 a Fe(E)p Black
Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
